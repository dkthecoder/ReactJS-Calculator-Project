{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dhruv\\\\Documents\\\\ReactJS-Calculator-Project\\\\reactjs-calculator-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE: 'delete-digit',\n  EVALUATE: 'evaluate'\n};\n\nfunction reducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n\n      return { ...state,\n        currentOperand: `${currentOperand || \"\"}${payload.digit}`\n      };\n\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n\n      if (state.currentOperand == null) {\n        return { ...state,\n          operation: payload.operation\n        };\n      }\n\n      if (state.previousOperand == null) {\n        return { ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n\n      return { ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n\n    case ACTIONS.CLEAR:\n      return {};\n\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n\n      return { ...state,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n  }\n}\n\nfunction evaluate(_ref2) {\n  let {\n    currentOperand,\n    previousOperand,\n    operation\n  } = _ref2;\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(previousOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n\n    case \"-\":\n      computation = prev - current;\n      break;\n\n    case \"*\":\n      computation = prev * current;\n      break;\n\n    case \"/\":\n      computation = prev / current;\n      break;\n  }\n\n  return computation.toString();\n}\n\nfunction App() {\n  _s();\n\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-operand\",\n        children: [previousOperand, \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-operand\",\n        children: currentOperand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      digit: \"/\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      digit: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      digit: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      digit: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"68AuaCkBm4JZJmRBNXbrgpWj4cg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useReducer","DigitButton","OperationButton","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE","EVALUATE","reducer","state","type","payload","digit","currentOperand","includes","previousOperand","operation","evaluate","prev","parseFloat","current","isNaN","computation","toString","App","dispatch"],"sources":["C:/Users/dhruv/Documents/ReactJS-Calculator-Project/reactjs-calculator-project/src/App.js"],"sourcesContent":["import { useReducer } from \"react\"\nimport DigitButton from \"./DigitButton\"\nimport OperationButton from \"./OperationButton\"\nimport \"./styles.css\"\n\nexport const ACTIONS = {\n  ADD_DIGIT: 'add-digit',\n  CHOOSE_OPERATION: 'choose-operation',\n  CLEAR: 'clear',\n  DELETE: 'delete-digit',\n  EVALUATE: 'evaluate'\n}\n\nfunction reducer(state, { type, payload }) {\n  switch(type) {\n    case ACTIONS.ADD_DIGIT:\n      if(payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state\n      }\n      if(payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state\n      } \n      return {\n        ...state,\n        currentOperand: `${currentOperand || \"\"}${payload.digit}`,\n      }\n    case ACTIONS.CHOOSE_OPERATION:\n      if(state.currentOperand == null && state.previousOperand == null) {\n        return state\n      }\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n        }\n      }\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        }\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      }\n    case ACTIONS.CLEAR: \n      return {}\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null){\n        return state\n      }\n      return{\n        ...state,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      }\n  }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n  const prev = parseFloat(previousOperand)\n  const current = parseFloat(previousOperand)\n  if (isNaN(prev) || isNaN(current)) return \"\"\n  let computation = \"\"\n  switch (operation) {\n    case \"+\":\n      computation = prev + current\n      break\n    case \"-\":\n      computation = prev - current\n      break\n    case \"*\":\n      computation = prev * current\n      break\n    case \"/\":\n      computation = prev / current\n      break\n  }\n  return computation.toString()\n}\n\nfunction App() {\n  const [{currentOperand, previousOperand, operation}, dispatch] = useReducer(reducer, {})\n   \n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">{previousOperand} {operation}</div>\n        <div className=\"current-operand\">{currentOperand}</div>\n        </div>\n        <button className=\"span-two\" onClick={() => dispatch({ type: ACTIONS.CLEAR })}>AC</button>\n        <button>DEL</button>\n        <OperationButton digit=\"/\" dispatch={dispatch}/>\n        <DigitButton digit=\"1\" dispatch={dispatch}/>\n        <DigitButton digit=\"2\" dispatch={dispatch}/>\n        <DigitButton digit=\"3\" dispatch={dispatch}/>\n        <OperationButton digit=\"*\" dispatch={dispatch}/>\n        <DigitButton digit=\"4\" dispatch={dispatch}/>\n        <DigitButton digit=\"5\" dispatch={dispatch}/>\n        <DigitButton digit=\"6\" dispatch={dispatch}/>\n        <OperationButton digit=\"+\" dispatch={dispatch}/>\n        <DigitButton digit=\"7\" dispatch={dispatch}/>\n        <DigitButton digit=\"8\" dispatch={dispatch}/>\n        <DigitButton digit=\"9\" dispatch={dispatch}/>\n        <OperationButton digit=\"-\" dispatch={dispatch}/>\n        <OperationButton digit=\".\" dispatch={dispatch}/>\n        <DigitButton digit=\"0\" dispatch={dispatch}/>\n        <button className=\"span-two\" onClick={() => dispatch({ type: ACTIONS.EVALUATE })}>=</button>\n        </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}